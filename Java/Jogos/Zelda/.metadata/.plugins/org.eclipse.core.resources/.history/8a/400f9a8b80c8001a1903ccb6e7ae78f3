package com.HagekopStudios.world;

import java.awt.Graphics;
import java.awt.image.BufferedImage;
import java.io.IOException;

import javax.imageio.ImageIO;

import com.HagekopStudios.entities.Enemy;
import com.HagekopStudios.entities.Entity;
import com.HagekopStudios.entities.Weapon;
import com.HagekopStudios.entities.Weapontwo;
import com.HagekopStudios.main.Game;

public class World {

	private Tile[] tiles;
	public static int WIDTH, HEIGHT;
	public World(String path) {
		try {
			BufferedImage map = ImageIO.read(getClass().getResource(path));
			int[] pixels = new int[map.getWidth()*map.getHeight()];
			tiles = new Tile[map.getWidth()*map.getHeight()];
			WIDTH = map.getWidth();
			HEIGHT = map.getHeight();
			map.getRGB(0, 0, map.getWidth(), map.getHeight(), pixels, 0,map.getWidth());
			for(int xx = 0; xx< map.getWidth(); xx++) {
				
				for(int yy = 0; yy < map.getHeight(); yy++) {
					int pixelA = pixels[xx+(yy*map.getWidth())]; 
					tiles[xx+(yy*WIDTH) ] = new FloorTile(Tile.TILE_FLOOR,xx*16,yy*16);
					if(pixelA == 0xFFFF00DC) {
						Game.player.setX(xx*16);
						Game.player.setY(yy*16);
					}else if(pixelA == 0xFF7F3300) {
						Game.entities.add(new Weapontwo(xx*16,yy*16,16,16,Entity.WEAPONTWO_EN));
					}else if(pixelA == 0xFFFF0000) {
						Game.entities.add(new Enemy(xx*16,yy*16,16,16,Entity.ENEMI_EN));
					}else if(pixelA == 0xFF0094FF) {
					
						Game.entities.add(new Muni(xx*16,yy*16,16,16,Entity.MUNI_EN));
					}else if(pixelA == 0xFFB6FF00) {
						Game.entities.add(new Enemy(xx*16,yy*16,16,16,Entity.LIFEPACK_EN));
					}else if(pixelA == 0xFFFFFFFF) {
						tiles[xx+(yy*WIDTH) ] = new FloorTile(Tile.TILE_WALL,xx*16,yy*16);
					}else if(pixelA == 0xFF000000) {
						Game.entities.add(new Weapon(xx*16,yy*16,16,16,Entity.WEAPON_EN));
					}

				}
			}
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void render(Graphics g) {
		for(int xx = 0; xx<WIDTH;xx++) {
			for(int yy = 0;yy <HEIGHT;yy++) {
				Tile tile = tiles[xx+(yy*WIDTH)];
				tile.render(g);
			}
		}
	}
}
