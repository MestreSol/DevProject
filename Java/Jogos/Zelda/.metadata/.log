!SESSION 2020-08-06 12:36:33.683 -----------------------------------------------
eclipse.buildId=4.16.0.I20200604-0540
java.version=1.8.0_261
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=pt_BR
Framework arguments:  -product org.eclipse.epp.package.jee.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.jee.product

This is a continuation of log file D:\github\DevProject\Java\Jogos\Zelda\.metadata\.bak_0.log
Created Time: 2020-08-06 14:11:00.771

!ENTRY org.eclipse.jdt.core 4 4 2020-08-06 14:11:00.779
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.HagekopStudios.entities;

import java.awt.Graphics;
import java.awt.Rectangle;
import java.awt.image.BufferedImage;

import com.HagekopStudios.main.Game;
import com.HagekopStudios.main.Sound;
import com.HagekopStudios.world.AStar;
import com.HagekopStudios.world.Camera;
import com.HagekopStudios.world.Vector2i;
import com.HagekopStudios.world.World;

public class Enemy extends Entity {

	// Declaração dos valores inalteraveis
	private static final int maxIndex = 4;
	private static final int maxFrames = 20;
	public static final int speed = 1;

	// Declaração dos Arrays sprites
	private BufferedImage[] RightEnemy;
	private BufferedImage[] LeftEnemy;
	private BufferedImage[] TopEnemy;
	private BufferedImage[] DownEnemy;
	private BufferedImage[] RightEnemyDamege;
	private BufferedImage[] LeftEnemyDamege;
	private BufferedImage[] TopEnemyDamege;
	private BufferedImage[] DownEnemyDamege;

	// Variaveis padroes

	private int life = 1;
	private int frames = 0;
	private int index = 0;
	private int damageFrames = 10;
	private int damageCurrent = 0;
	private int last = 0;
	private int MaxDamege = 3;

	private boolean isDamege = false;
	private boolean isDamaged = false;

	// Construtor para instancia
	public Enemy(int x, int y, int width, int height, BufferedImage Spritesheet) {
		super(x, y, width, height, null);

		// Declaraçao da quantidade de quadros dos Sprites
		RightEnemy = new BufferedImage[5];
		LeftEnemy = new BufferedImage[5];
		TopEnemy = new BufferedImage[5];
		DownEnemy = new BufferedImage[5];
		RightEnemyDamege = new BufferedImage[5];
		LeftEnemyDamege = new BufferedImage[5];
		TopEnemyDamege = new BufferedImage[5];
		DownEnemyDamege = new BufferedImage[5];

		// Laços para pegar os Sprites separadamente montando a animação
		for (int i = 0; i < 5; i++) {

			RightEnemy[i] = Game.spritesheet.getSprite(160, 80 + (World.TILE_SIZE * i), World.TILE_SIZE,
					World.TILE_SIZE);

		}

		for (int i = 0; i < 5; i++) {

			LeftEnemy[i] = Game.spritesheet.getSprite(144, 80 + (World.TILE_SIZE * i), World.TILE_SIZE,
					World.TILE_SIZE);

		}

		for (int i = 0; i < 5; i++) {

			TopEnemy[i] = Game.spritesheet.getSprite(112, 80 + (World.TILE_SIZE * i), World.TILE_SIZE, World.TILE_SIZE);

		}

		for (int i = 0; i < 5; i++) {

			DownEnemy[i] = Game.spritesheet.getSprite(128, 80 + (World.TILE_SIZE * i), World.TILE_SIZE,
					World.TILE_SIZE);

		}

		for (int i = 0; i < 5; i++) {

			RightEnemyDamege[i] = Game.spritesheet.getSprite(160, 176 + (World.TILE_SIZE * i), World.TILE_SIZE,
					World.TILE_SIZE);

		}

		for (int i = 0; i < 5; i++) {

			LeftEnemyDamege[i] = Game.spritesheet.getSprite(144, 176 + (World.TILE_SIZE * i), World.TILE_SIZE,
					World.TILE_SIZE);

		}

		for (int i = 0; i < 5; i++) {

			TopEnemyDamege[i] = Game.spritesheet.getSprite(112, 176 + (World.TILE_SIZE * i), World.TILE_SIZE,
					World.TILE_SIZE);

		}

		for (int i = 0; i < 5; i++) {

			DownEnemyDamege[i] = Game.spritesheet.getSprite(128, 176 + (World.TILE_SIZE * i), World.TILE_SIZE,
					World.TILE_SIZE);

		}

	}

	public boolean control = false, control1 = false;

	// Logica do Inimigo
	public void tick() {

		// Caso nao exista colizão entre o player e o inimigo, o inimigo devera andar
		// até o player

		if (this.Distancia(this.getX(), this.getY(), Game.player.getX(), Game.player.getY()) <= 200) {
			if (!isColiddingWithPlayer()) {
				
				 if (!World.isFree((int) (x + speed), this.getY())) { control = true; } else {
				 if (!isColiddingWithPlayer()) {
				 
				 // Verifica a posição do jogador em relação ao inimigo para movimentalo, //
				  verifica tambem se ele esta colidindo com algo, Verifica a distancia que o //
				  inimigo esta do jogador if ((int) x < Game.player.getX() &&
				  World.isFree((int) (x + speed), this.getY()) && !isColidding((int) (x +
				  speed), this.getY())) {
				  
				  x += speed; last = 1;
				  
				  left = true; this.moved = true;
				  
				  }
				  
				  else if ((int) x > Game.player.getX() && World.isFree((int) (x - speed),
				  this.getY()) && !isColidding((int) (x - speed), this.getY())) {
				  
				  x -= speed; last = 2;
				  
				  right = true; this.moved = true;
				  
				  }
				  
				  if ((int) y < Game.player.getY() && World.isFree(this.getX(), (int) (y +
				  speed)) && !isColidding(this.getX(), (int) (y + speed))) {
				  
				  y += speed; last = 3;
				  
				  up = true; this.moved = true;
				  
				  }
				  
				  else if ((int) y > Game.player.getY() && World.isFree(this.getX(), (int) (y -
				  speed)) && !isColidding(this.getX(), (int) (y - speed))) {
				  
				  last = 4; y -= speed;
				  
				  setDown(true); this.moved = true;
				  
				  } else {
				  
				  switch (last) {
				  
				  case 1:
				  
				  left = true;
				  
				  break;
				  
				  case 2:
				  
				  right = true;
				  
				  break;
				  
				  case 3:
				  
				  up = true;
				  
				  break;
				  
				  case 4:
				  
				  setDown(true);
				  
				  break;
				  
				  }
				  
				  }
				  
				  } else {
				  
				  // Player colidindo com inimigo
				  
				  // Decrementa um valor aleatorio entre 0 e 3 da vida do jogador if
				  (Game.player.sobrevida >= 1) {
				  
				  Game.player.sobrevida -= Game.rand.nextInt(MaxDamege);
				  
				  if (Game.player.sobrevida < 0) {
				  
				  Game.player.life += Game.player.sobrevida; Game.player.sobrevida = 0;
				  
				  }
				  
				  } else {
				  
				  Game.player.life -= Game.rand.nextInt(MaxDamege);
				  
				  }
				  
				  Game.player.isDamege = true; Sound.DamegePlayer.play();
				  
				  } 
				 }
				 	// if (control) {
				/*if (!isColiddingWithPlayer()) {
					if (path == null || path.size() == 0) {
						Vector2i start = new Vector2i((int) (x / World.TILE_SIZE), (int) (y / World.TILE_SIZE));
						Vector2i end = new Vector2i((int) (Game.player.x / World.TILE_SIZE),
								(int) (Game.player.y / World.TILE_SIZE));
						path = AStar.findPath(Game.world, start, end);

					}

					followPath(path);
				} else {
					if (Game.player.sobrevida >= 1) {

						Game.player.sobrevida -= Game.rand.nextInt(MaxDamege);

						if (Game.player.sobrevida < 0) {

							Game.player.life += Game.player.sobrevida;
							Game.player.sobrevida = 0;

						}

					} else {

						Game.player.life -= Game.rand.nextInt(MaxDamege);

					}

					Game.player.isDamege = true;
					Sound.DamegePlayer.play();

				}*/
			}
		}
		// }

		// Verifica se o inimigo esta se movimentando, caso esteja o array sera
		// executado do 2 ao 5 caso nao do 0 ao 1

		if (moved) {

			// incrementa frames para ter controle do tempo de animação

			frames++;

			if (frames == maxFrames) {

				frames = 0;
				index++;

				// Retorna a animação para o 0
				if (index > maxIndex)
					index = 2;

			}

		} else {

			// Mesma coisa porem para o personagem parado
			frames++;

			if (frames == maxFrames) {

				frames = 0;
				index++;

				if (index > 1)
					index = 0;
			}
		}

		// System.out.println(index);
		// Destroi o inimigo com vida 0
		if (life <= 0) {

			destroySelf();
			return;

		}

		if (isDamaged) {

			this.damageCurrent++;

			if (this.damageCurrent == this.damageFrames) {

				this.damageCurrent = 0;
				this.isDamaged = false;

			}
		}

		collidionBullet();

		if (life <= 0) {

			destroySelf();

		}
		if(this.isColiddingWithPlayer()) {
			if(Game.player.sobrevida > 0) {
				Game.player.sobrevida -= Game.rand.nextInt(MaxDamege);
				if(Game.player.sobrevida < 0) {
					Game.player.life += Game.player.sobrevida;
					Game.player.sobrevida = 0;
				}
			}else {
				Game.player.life -= Game.rand.nextInt(MaxDamege);
			}
			Game.player.isDamege = true;
			Sound.DamegePlayer.play();
		}
	}

	public void collidionBullet() {

		for (int i = 0; i < Game.Bullets.size(); i++) {

			Entity e = Game.Bullets.get(i);

			if (e instanceof Bullet) {

				if (Entity.isColidding(this, e)) {

					Sound.DamegeEnemy.play();
					life--;

					Game.Bullets.remove(i);
					return;

				}
			}
		}
	}

	public void destroySelf() {

		Game.enemies.remove(this);
		Game.entities.remove(this);

	}

	public void render(Graphics g) {

		if (this.isDamaged) {

			if (right) {

				this.right = false;
				this.moved = false;

				g.drawImage(RightEnemyDamege[index], this.getX() - Camera.x, this.getY() - Camera.y, null);

			} else if (left) {

				this.left = false;
				this.moved = false;

				g.drawImage(LeftEnemyDamege[index], this.getX() - Camera.x, this.getY() - Camera.y, null);

			} else if (up) {

				this.up = false;
				this.moved = false;

				g.drawImage(TopEnemyDamege[index], this.getX() - Camera.x, this.getY() - Camera.y, null);

			} else {

				setDown(false);
				this.moved = false;

				g.drawImage(DownEnemyDamege[index], this.getX() - Camera.x, this.getY() - Camera.y, null);

			}
		} else {

			if (right) {

				this.right = false;
				this.moved = false;

				g.drawImage(RightEnemy[index], this.getX() - Camera.x, this.getY() - Camera.y, null);

			} else if (left) {

				this.left = false;
				this.moved = false;

				g.drawImage(LeftEnemy[index], this.getX() - Camera.x, this.getY() - Camera.y, null);

			} else if (up) {

				this.up = false;
				this.moved = false;

				g.drawImage(TopEnemy[index], this.getX() - Camera.x, this.getY() - Camera.y, null);

			} else {

				setDown(false);
				this.moved = false;

				g.drawImage(DownEnemy[index], this.getX() - Camera.x, this.getY() - Camera.y, null);

			}
		}
	}

	public boolean isDown() {
		return down;
	}

	public void setDown(boolean down) {
		this.down = down;
	}

	public boolean isDamege() {
		return isDamege;
	}

	public void setDamege(boolean isDamege) {
		this.isDamege = isDamege;
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3750)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2203)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2203)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3302)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:306)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:192)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4005)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3633)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1158)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1047)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:658)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:154)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-08-06 14:11:00.790
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3750)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2203)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2203)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3302)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:306)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:192)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4005)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3633)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1158)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1047)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:658)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:154)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-08-06 14:11:00.799
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3750)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2203)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2203)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3302)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:306)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:192)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4005)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3633)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1158)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1047)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:658)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:154)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.jdt.core 4 4 2020-08-06 14:11:00.813
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.HagekopStudios.entities;

import java.awt.Graphics;
import java.awt.Rectangle;
import java.awt.image.BufferedImage;

import com.HagekopStudios.main.Game;
import com.HagekopStudios.main.Sound;
import com.HagekopStudios.world.AStar;
import com.HagekopStudios.world.Camera;
import com.HagekopStudios.world.Vector2i;
import com.HagekopStudios.world.World;

public class Enemy extends Entity {

	// Declaração dos valores inalteraveis
	private static final int maxIndex = 4;
	private static final int maxFrames = 20;
	public static final int speed = 1;

	// Declaração dos Arrays sprites
	private BufferedImage[] RightEnemy;
	private BufferedImage[] LeftEnemy;
	private BufferedImage[] TopEnemy;
	private BufferedImage[] DownEnemy;
	private BufferedImage[] RightEnemyDamege;
	private BufferedImage[] LeftEnemyDamege;
	private BufferedImage[] TopEnemyDamege;
	private BufferedImage[] DownEnemyDamege;

	// Variaveis padroes

	private int life = 1;
	private int frames = 0;
	private int index = 0;
	private int damageFrames = 10;
	private int damageCurrent = 0;
	private int last = 0;
	private int MaxDamege = 3;

	private boolean isDamege = false;
	private boolean isDamaged = false;

	// Construtor para instancia
	public Enemy(int x, int y, int width, int height, BufferedImage Spritesheet) {
		super(x, y, width, height, null);

		// Declaraçao da quantidade de quadros dos Sprites
		RightEnemy = new BufferedImage[5];
		LeftEnemy = new BufferedImage[5];
		TopEnemy = new BufferedImage[5];
		DownEnemy = new BufferedImage[5];
		RightEnemyDamege = new BufferedImage[5];
		LeftEnemyDamege = new BufferedImage[5];
		TopEnemyDamege = new BufferedImage[5];
		DownEnemyDamege = new BufferedImage[5];

		// Laços para pegar os Sprites separadamente montando a animação
		for (int i = 0; i < 5; i++) {

			RightEnemy[i] = Game.spritesheet.getSprite(160, 80 + (World.TILE_SIZE * i), World.TILE_SIZE,
					World.TILE_SIZE);

		}

		for (int i = 0; i < 5; i++) {

			LeftEnemy[i] = Game.spritesheet.getSprite(144, 80 + (World.TILE_SIZE * i), World.TILE_SIZE,
					World.TILE_SIZE);

		}

		for (int i = 0; i < 5; i++) {

			TopEnemy[i] = Game.spritesheet.getSprite(112, 80 + (World.TILE_SIZE * i), World.TILE_SIZE, World.TILE_SIZE);

		}

		for (int i = 0; i < 5; i++) {

			DownEnemy[i] = Game.spritesheet.getSprite(128, 80 + (World.TILE_SIZE * i), World.TILE_SIZE,
					World.TILE_SIZE);

		}

		for (int i = 0; i < 5; i++) {

			RightEnemyDamege[i] = Game.spritesheet.getSprite(160, 176 + (World.TILE_SIZE * i), World.TILE_SIZE,
					World.TILE_SIZE);

		}

		for (int i = 0; i < 5; i++) {

			LeftEnemyDamege[i] = Game.spritesheet.getSprite(144, 176 + (World.TILE_SIZE * i), World.TILE_SIZE,
					World.TILE_SIZE);

		}

		for (int i = 0; i < 5; i++) {

			TopEnemyDamege[i] = Game.spritesheet.getSprite(112, 176 + (World.TILE_SIZE * i), World.TILE_SIZE,
					World.TILE_SIZE);

		}

		for (int i = 0; i < 5; i++) {

			DownEnemyDamege[i] = Game.spritesheet.getSprite(128, 176 + (World.TILE_SIZE * i), World.TILE_SIZE,
					World.TILE_SIZE);

		}

	}

	public boolean control = false, control1 = false;

	// Logica do Inimigo
	public void tick() {

		// Caso nao exista colizão entre o player e o inimigo, o inimigo devera andar
		// até o player

		if (this.Distancia(this.getX(), this.getY(), Game.player.getX(), Game.player.getY()) <= 200) {
			if (!isColiddingWithPlayer()) {
				
				 if (!World.isFree((int) (x + speed), this.getY())) { control = true; } else {
				 if (!isColiddingWithPlayer()) {
				 
				 // Verifica a posição do jogador em relação ao inimigo para movimentalo, //
				  verifica tambem se ele esta colidindo com algo, Verifica a distancia que o //
				  inimigo esta do jogador if ((int) x < Game.player.getX() &&
				  World.isFree((int) (x + speed), this.getY()) && !isColidding((int) (x +
				  speed), this.getY())) {
				  
				  x += speed; last = 1;
				  
				  left = true; this.moved = true;
				  
				  }
				  
				  else if ((int) x > Game.player.getX() && World.isFree((int) (x - speed),
				  this.getY()) && !isColidding((int) (x - speed), this.getY())) {
				  
				  x -= speed; last = 2;
				  
				  right = true; this.moved = true;
				  
				  }
				  
				  if ((int) y < Game.player.getY() && World.isFree(this.getX(), (int) (y +
				  speed)) && !isColidding(this.getX(), (int) (y + speed))) {
				  
				  y += speed; last = 3;
				  
				  up = true; this.moved = true;
				  
				  }
				  
				  else if ((int) y > Game.player.getY() && World.isFree(this.getX(), (int) (y -
				  speed)) && !isColidding(this.getX(), (int) (y - speed))) {
				  
				  last = 4; y -= speed;
				  
				  setDown(true); this.moved = true;
				  
				  } else {
				  
				  switch (last) {
				  
				  case 1:
				  
				  left = true;
				  
				  break;
				  
				  case 2:
				  
				  right = true;
				  
				  break;
				  
				  case 3:
				  
				  up = true;
				  
				  break;
				  
				  case 4:
				  
				  setDown(true);
				  
				  break;
				  
				  }
				  
				  }
				  
				  } else {
				  
				  // Player colidindo com inimigo
				  
				  // Decrementa um valor aleatorio entre 0 e 3 da vida do jogador if
				  (Game.player.sobrevida >= 1) {
				  
				  Game.player.sobrevida -= Game.rand.nextInt(MaxDamege);
				  
				  if (Game.player.sobrevida < 0) {
				  
				  Game.player.life += Game.player.sobrevida; Game.player.sobrevida = 0;
				  
				  }
				  
				  } else {
				  
				  Game.player.life -= Game.rand.nextInt(MaxDamege);
				  
				  }
				  
				  Game.player.isDamege = true; Sound.DamegePlayer.play();
				  
				  } 
				 }
				 	// if (control) {
				/*if (!isColiddingWithPlayer()) {
					if (path == null || path.size() == 0) {
						Vector2i start = new Vector2i((int) (x / World.TILE_SIZE), (int) (y / World.TILE_SIZE));
						Vector2i end = new Vector2i((int) (Game.player.x / World.TILE_SIZE),
								(int) (Game.player.y / World.TILE_SIZE));
						path = AStar.findPath(Game.world, start, end);

					}

					followPath(path);
				} else {
					if (Game.player.sobrevida >= 1) {

						Game.player.sobrevida -= Game.rand.nextInt(MaxDamege);

						if (Game.player.sobrevida < 0) {

							Game.player.life += Game.player.sobrevida;
							Game.player.sobrevida = 0;

						}

					} else {

						Game.player.life -= Game.rand.nextInt(MaxDamege);

					}

					Game.player.isDamege = true;
					Sound.DamegePlayer.play();

				}*/
			}
		}
		// }

		// Verifica se o inimigo esta se movimentando, caso esteja o array sera
		// executado do 2 ao 5 caso nao do 0 ao 1

		if (moved) {

			// incrementa frames para ter controle do tempo de animação

			frames++;

			if (frames == maxFrames) {

				frames = 0;
				index++;

				// Retorna a animação para o 0
				if (index > maxIndex)
					index = 2;

			}

		} else {

			// Mesma coisa porem para o personagem parado
			frames++;

			if (frames == maxFrames) {

				frames = 0;
				index++;

				if (index > 1)
					index = 0;
			}
		}

		// System.out.println(index);
		// Destroi o inimigo com vida 0
		if (life <= 0) {

			destroySelf();
			return;

		}

		if (isDamaged) {

			this.damageCurrent++;

			if (this.damageCurrent == this.damageFrames) {

				this.damageCurrent = 0;
				this.isDamaged = false;

			}
		}

		collidionBullet();

		if (life <= 0) {

			destroySelf();

		}
		if(this.isColiddingWithPlayer()) {
			if(Game.player.sobrevida > 0) {
				Game.player.sobrevida -= Game.rand.nextInt(MaxDamege);
				if(Game.player.sobrevida < 0) {
					Game.player.life += Game.player.sobrevida;
					Game.player.sobrevida = 0;
				}
			}else {
				Game.player.life -= Game.rand.nextInt(MaxDamege);
			}
			Game.player.isDamege = true;
			Sound.DamegePlayer.play();
		}
	}

	public void collidionBullet() {

		for (int i = 0; i < Game.Bullets.size(); i++) {

			Entity e = Game.Bullets.get(i);

			if (e instanceof Bullet) {

				if (Entity.isColidding(this, e)) {

					Sound.DamegeEnemy.play();
					life--;

					Game.Bullets.remove(i);
					return;

				}
			}
		}
	}

	public void destroySelf() {

		Game.enemies.remove(this);
		Game.entities.remove(this);

	}

	public void render(Graphics g) {

		if (this.isDamaged) {

			if (right) {

				this.right = false;
				this.moved = false;

				g.drawImage(RightEnemyDamege[index], this.getX() - Camera.x, this.getY() - Camera.y, null);

			} else if (left) {

				this.left = false;
				this.moved = false;

				g.drawImage(LeftEnemyDamege[index], this.getX() - Camera.x, this.getY() - Camera.y, null);

			} else if (up) {

				this.up = false;
				this.moved = false;

				g.drawImage(TopEnemyDamege[index], this.getX() - Camera.x, this.getY() - Camera.y, null);

			} else {

				setDown(false);
				this.moved = false;

				g.drawImage(DownEnemyDamege[index], this.getX() - Camera.x, this.getY() - Camera.y, null);

			}
		} else {

			if (right) {

				this.right = false;
				this.moved = false;

				g.drawImage(RightEnemy[index], this.getX() - Camera.x, this.getY() - Camera.y, null);

			} else if (left) {

				this.left = false;
				this.moved = false;

				g.drawImage(LeftEnemy[index], this.getX() - Camera.x, this.getY() - Camera.y, null);

			} else if (up) {

				this.up = false;
				this.moved = false;

				g.drawImage(TopEnemy[index], this.getX() - Camera.x, this.getY() - Camera.y, null);

			} else {

				setDown(false);
				this.moved = false;

				g.drawImage(DownEnemy[index], this.getX() - Camera.x, this.getY() - Camera.y, null);

			}
		}
	}

	public boolean isDown() {
		return down;
	}

	public void setDown(boolean down) {
		this.down = down;
	}

	public boolean isDamege() {
		return isDamege;
	}

	public void setDamege(boolean isDamege) {
		this.isDamege = isDamege;
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3750)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2203)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2203)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3302)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving.createQuickFixAST(ASTResolving.java:1022)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:131)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:306)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:192)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4005)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3633)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1158)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1047)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:658)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:154)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.ui 4 0 2020-08-06 14:11:00.823
!MESSAGE Unhandled event loop exception
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3750)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2203)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2203)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3302)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving.createQuickFixAST(ASTResolving.java:1022)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:131)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:306)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:192)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4005)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3633)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1158)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1047)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:658)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:154)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.jdt.core 4 4 2020-08-06 14:11:00.839
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.HagekopStudios.entities;

import java.awt.Graphics;
import java.awt.Rectangle;
import java.awt.image.BufferedImage;

import com.HagekopStudios.main.Game;
import com.HagekopStudios.main.Sound;
import com.HagekopStudios.world.AStar;
import com.HagekopStudios.world.Camera;
import com.HagekopStudios.world.Vector2i;
import com.HagekopStudios.world.World;

public class Enemy extends Entity {

	// Declaração dos valores inalteraveis
	private static final int maxIndex = 4;
	private static final int maxFrames = 20;
	public static final int speed = 1;

	// Declaração dos Arrays sprites
	private BufferedImage[] RightEnemy;
	private BufferedImage[] LeftEnemy;
	private BufferedImage[] TopEnemy;
	private BufferedImage[] DownEnemy;
	private BufferedImage[] RightEnemyDamege;
	private BufferedImage[] LeftEnemyDamege;
	private BufferedImage[] TopEnemyDamege;
	private BufferedImage[] DownEnemyDamege;

	// Variaveis padroes

	private int life = 1;
	private int frames = 0;
	private int index = 0;
	private int damageFrames = 10;
	private int damageCurrent = 0;
	private int last = 0;
	private int MaxDamege = 3;

	private boolean isDamege = false;
	private boolean isDamaged = false;

	// Construtor para instancia
	public Enemy(int x, int y, int width, int height, BufferedImage Spritesheet) {
		super(x, y, width, height, null);

		// Declaraçao da quantidade de quadros dos Sprites
		RightEnemy = new BufferedImage[5];
		LeftEnemy = new BufferedImage[5];
		TopEnemy = new BufferedImage[5];
		DownEnemy = new BufferedImage[5];
		RightEnemyDamege = new BufferedImage[5];
		LeftEnemyDamege = new BufferedImage[5];
		TopEnemyDamege = new BufferedImage[5];
		DownEnemyDamege = new BufferedImage[5];

		// Laços para pegar os Sprites separadamente montando a animação
		for (int i = 0; i < 5; i++) {

			RightEnemy[i] = Game.spritesheet.getSprite(160, 80 + (World.TILE_SIZE * i), World.TILE_SIZE,
					World.TILE_SIZE);

		}

		for (int i = 0; i < 5; i++) {

			LeftEnemy[i] = Game.spritesheet.getSprite(144, 80 + (World.TILE_SIZE * i), World.TILE_SIZE,
					World.TILE_SIZE);

		}

		for (int i = 0; i < 5; i++) {

			TopEnemy[i] = Game.spritesheet.getSprite(112, 80 + (World.TILE_SIZE * i), World.TILE_SIZE, World.TILE_SIZE);

		}

		for (int i = 0; i < 5; i++) {

			DownEnemy[i] = Game.spritesheet.getSprite(128, 80 + (World.TILE_SIZE * i), World.TILE_SIZE,
					World.TILE_SIZE);

		}

		for (int i = 0; i < 5; i++) {

			RightEnemyDamege[i] = Game.spritesheet.getSprite(160, 176 + (World.TILE_SIZE * i), World.TILE_SIZE,
					World.TILE_SIZE);

		}

		for (int i = 0; i < 5; i++) {

			LeftEnemyDamege[i] = Game.spritesheet.getSprite(144, 176 + (World.TILE_SIZE * i), World.TILE_SIZE,
					World.TILE_SIZE);

		}

		for (int i = 0; i < 5; i++) {

			TopEnemyDamege[i] = Game.spritesheet.getSprite(112, 176 + (World.TILE_SIZE * i), World.TILE_SIZE,
					World.TILE_SIZE);

		}

		for (int i = 0; i < 5; i++) {

			DownEnemyDamege[i] = Game.spritesheet.getSprite(128, 176 + (World.TILE_SIZE * i), World.TILE_SIZE,
					World.TILE_SIZE);

		}

	}

	public boolean control = false, control1 = false;

	// Logica do Inimigo
	public void tick() {

		// Caso nao exista colizão entre o player e o inimigo, o inimigo devera andar
		// até o player

		if (this.Distancia(this.getX(), this.getY(), Game.player.getX(), Game.player.getY()) <= 200) {
			if (!isColiddingWithPlayer()) {
				
				 if (!World.isFree((int) (x + speed), this.getY())) { control = true; } else {
				 if (!isColiddingWithPlayer()) {
				 
				 // Verifica a posição do jogador em relação ao inimigo para movimentalo, //
				  verifica tambem se ele esta colidindo com algo, Verifica a distancia que o //
				  inimigo esta do jogador if ((int) x < Game.player.getX() &&
				  World.isFree((int) (x + speed), this.getY()) && !isColidding((int) (x +
				  speed), this.getY())) {
				  
				  x += speed; last = 1;
				  
				  left = true; this.moved = true;
				  
				  }
				  
				  else if ((int) x > Game.player.getX() && World.isFree((int) (x - speed),
				  this.getY()) && !isColidding((int) (x - speed), this.getY())) {
				  
				  x -= speed; last = 2;
				  
				  right = true; this.moved = true;
				  
				  }
				  
				  if ((int) y < Game.player.getY() && World.isFree(this.getX(), (int) (y +
				  speed)) && !isColidding(this.getX(), (int) (y + speed))) {
				  
				  y += speed; last = 3;
				  
				  up = true; this.moved = true;
				  
				  }
				  
				  else if ((int) y > Game.player.getY() && World.isFree(this.getX(), (int) (y -
				  speed)) && !isColidding(this.getX(), (int) (y - speed))) {
				  
				  last = 4; y -= speed;
				  
				  setDown(true); this.moved = true;
				  
				  } else {
				  
				  switch (last) {
				  
				  case 1:
				  
				  left = true;
				  
				  break;
				  
				  case 2:
				  
				  right = true;
				  
				  break;
				  
				  case 3:
				  
				  up = true;
				  
				  break;
				  
				  case 4:
				  
				  setDown(true);
				  
				  break;
				  
				  }
				  
				  }
				  
				  } else {
				  
				  // Player colidindo com inimigo
				  
				  // Decrementa um valor aleatorio entre 0 e 3 da vida do jogador if
				  (Game.player.sobrevida >= 1) {
				  
				  Game.player.sobrevida -= Game.rand.nextInt(MaxDamege);
				  
				  if (Game.player.sobrevida < 0) {
				  
				  Game.player.life += Game.player.sobrevida; Game.player.sobrevida = 0;
				  
				  }
				  
				  } else {
				  
				  Game.player.life -= Game.rand.nextInt(MaxDamege);
				  
				  }
				  
				  Game.player.isDamege = true; Sound.DamegePlayer.play();
				  
				  } 
				 }
				 	// if (control) {
				/*if (!isColiddingWithPlayer()) {
					if (path == null || path.size() == 0) {
						Vector2i start = new Vector2i((int) (x / World.TILE_SIZE), (int) (y / World.TILE_SIZE));
						Vector2i end = new Vector2i((int) (Game.player.x / World.TILE_SIZE),
								(int) (Game.player.y / World.TILE_SIZE));
						path = AStar.findPath(Game.world, start, end);

					}

					followPath(path);
				} else {
					if (Game.player.sobrevida >= 1) {

						Game.player.sobrevida -= Game.rand.nextInt(MaxDamege);

						if (Game.player.sobrevida < 0) {

							Game.player.life += Game.player.sobrevida;
							Game.player.sobrevida = 0;

						}

					} else {

						Game.player.life -= Game.rand.nextInt(MaxDamege);

					}

					Game.player.isDamege = true;
					Sound.DamegePlayer.play();

				}*/
			}
		}
		// }

		// Verifica se o inimigo esta se movimentando, caso esteja o array sera
		// executado do 2 ao 5 caso nao do 0 ao 1

		if (moved) {

			// incrementa frames para ter controle do tempo de animação

			frames++;

			if (frames == maxFrames) {

				frames = 0;
				index++;

				// Retorna a animação para o 0
				if (index > maxIndex)
					index = 2;

			}

		} else {

			// Mesma coisa porem para o personagem parado
			frames++;

			if (frames == maxFrames) {

				frames = 0;
				index++;

				if (index > 1)
					index = 0;
			}
		}

		// System.out.println(index);
		// Destroi o inimigo com vida 0
		if (life <= 0) {

			destroySelf();
			return;

		}

		if (isDamaged) {

			this.damageCurrent++;

			if (this.damageCurrent == this.damageFrames) {

				this.damageCurrent = 0;
				this.isDamaged = false;

			}
		}

		collidionBullet();

		if (life <= 0) {

			destroySelf();

		}
		if(this.isColiddingWithPlayer()) {
			if(Game.player.sobrevida > 0) {
				Game.player.sobrevida -= Game.rand.nextInt(MaxDamege);
				if(Game.player.sobrevida < 0) {
					Game.player.life += Game.player.sobrevida;
					Game.player.sobrevida = 0;
				}
			}else {
				Game.player.life -= Game.rand.nextInt(MaxDamege);
			}
			Game.player.isDamege = true;
			Sound.DamegePlayer.play();
		}
	}

	public void collidionBullet() {

		for (int i = 0; i < Game.Bullets.size(); i++) {

			Entity e = Game.Bullets.get(i);

			if (e instanceof Bullet) {

				if (Entity.isColidding(this, e)) {

					Sound.DamegeEnemy.play();
					life--;

					Game.Bullets.remove(i);
					return;

				}
			}
		}
	}

	public void destroySelf() {

		Game.enemies.remove(this);
		Game.entities.remove(this);

	}

	public void render(Graphics g) {

		if (this.isDamaged) {

			if (right) {

				this.right = false;
				this.moved = false;

				g.drawImage(RightEnemyDamege[index], this.getX() - Camera.x, this.getY() - Camera.y, null);

			} else if (left) {

				this.left = false;
				this.moved = false;

				g.drawImage(LeftEnemyDamege[index], this.getX() - Camera.x, this.getY() - Camera.y, null);

			} else if (up) {

				this.up = false;
				this.moved = false;

				g.drawImage(TopEnemyDamege[index], this.getX() - Camera.x, this.getY() - Camera.y, null);

			} else {

				setDown(false);
				this.moved = false;

				g.drawImage(DownEnemyDamege[index], this.getX() - Camera.x, this.getY() - Camera.y, null);

			}
		} else {

			if (right) {

				this.right = false;
				this.moved = false;

				g.drawImage(RightEnemy[index], this.getX() - Camera.x, this.getY() - Camera.y, null);

			} else if (left) {

				this.left = false;
				this.moved = false;

				g.drawImage(LeftEnemy[index], this.getX() - Camera.x, this.getY() - Camera.y, null);

			} else if (up) {

				this.up = false;
				this.moved = false;

				g.drawImage(TopEnemy[index], this.getX() - Camera.x, this.getY() - Camera.y, null);

			} else {

				setDown(false);
				this.moved = false;

				g.drawImage(DownEnemy[index], this.getX() - Camera.x, this.getY() - Camera.y, null);

			}
		}
	}

	public boolean isDown() {
		return down;
	}

	public void setDown(boolean down) {
		this.down = down;
	}

	public boolean isDamege() {
		return isDamege;
	}

	public void setDamege(boolean isDamege) {
		this.isDamege = isDamege;
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3750)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2203)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2203)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3302)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:175)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:160)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-08-06 14:11:00.850
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3750)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2203)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2203)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3302)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:175)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:160)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-08-06 14:11:00.861
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3750)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2203)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2203)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3302)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:175)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:160)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2020-08-06 14:11:02.005
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.HagekopStudios.entities;

import java.awt.Graphics;
import java.awt.Rectangle;
import java.awt.image.BufferedImage;

import com.HagekopStudios.main.Game;
import com.HagekopStudios.main.Sound;
import com.HagekopStudios.world.AStar;
import com.HagekopStudios.world.Camera;
import com.HagekopStudios.world.Vector2i;
import com.HagekopStudios.world.World;

public class Enemy extends Entity {

	// Declaração dos valores inalteraveis
	private static final int maxIndex = 4;
	private static final int maxFrames = 20;
	public static final int speed = 1;

	// Declaração dos Arrays sprites
	private BufferedImage[] RightEnemy;
	private BufferedImage[] LeftEnemy;
	private BufferedImage[] TopEnemy;
	private BufferedImage[] DownEnemy;
	private BufferedImage[] RightEnemyDamege;
	private BufferedImage[] LeftEnemyDamege;
	private BufferedImage[] TopEnemyDamege;
	private BufferedImage[] DownEnemyDamege;

	// Variaveis padroes

	private int life = 1;
	private int frames = 0;
	private int index = 0;
	private int damageFrames = 10;
	private int damageCurrent = 0;
	private int last = 0;
	private int MaxDamege = 3;

	private boolean isDamege = false;
	private boolean isDamaged = false;

	// Construtor para instancia
	public Enemy(int x, int y, int width, int height, BufferedImage Spritesheet) {
		super(x, y, width, height, null);

		// Declaraçao da quantidade de quadros dos Sprites
		RightEnemy = new BufferedImage[5];
		LeftEnemy = new BufferedImage[5];
		TopEnemy = new BufferedImage[5];
		DownEnemy = new BufferedImage[5];
		RightEnemyDamege = new BufferedImage[5];
		LeftEnemyDamege = new BufferedImage[5];
		TopEnemyDamege = new BufferedImage[5];
		DownEnemyDamege = new BufferedImage[5];

		// Laços para pegar os Sprites separadamente montando a animação
		for (int i = 0; i < 5; i++) {

			RightEnemy[i] = Game.spritesheet.getSprite(160, 80 + (World.TILE_SIZE * i), World.TILE_SIZE,
					World.TILE_SIZE);

		}

		for (int i = 0; i < 5; i++) {

			LeftEnemy[i] = Game.spritesheet.getSprite(144, 80 + (World.TILE_SIZE * i), World.TILE_SIZE,
					World.TILE_SIZE);

		}

		for (int i = 0; i < 5; i++) {

			TopEnemy[i] = Game.spritesheet.getSprite(112, 80 + (World.TILE_SIZE * i), World.TILE_SIZE, World.TILE_SIZE);

		}

		for (int i = 0; i < 5; i++) {

			DownEnemy[i] = Game.spritesheet.getSprite(128, 80 + (World.TILE_SIZE * i), World.TILE_SIZE,
					World.TILE_SIZE);

		}

		for (int i = 0; i < 5; i++) {

			RightEnemyDamege[i] = Game.spritesheet.getSprite(160, 176 + (World.TILE_SIZE * i), World.TILE_SIZE,
					World.TILE_SIZE);

		}

		for (int i = 0; i < 5; i++) {

			LeftEnemyDamege[i] = Game.spritesheet.getSprite(144, 176 + (World.TILE_SIZE * i), World.TILE_SIZE,
					World.TILE_SIZE);

		}

		for (int i = 0; i < 5; i++) {

			TopEnemyDamege[i] = Game.spritesheet.getSprite(112, 176 + (World.TILE_SIZE * i), World.TILE_SIZE,
					World.TILE_SIZE);

		}

		for (int i = 0; i < 5; i++) {

			DownEnemyDamege[i] = Game.spritesheet.getSprite(128, 176 + (World.TILE_SIZE * i), World.TILE_SIZE,
					World.TILE_SIZE);

		}

	}

	public boolean control = false, control1 = false;

	// Logica do Inimigo
	public void tick() {

		// Caso nao exista colizão entre o player e o inimigo, o inimigo devera andar
		// até o player

		if (this.Distancia(this.getX(), this.getY(), Game.player.getX(), Game.player.getY()) <= 200) {
			if (!isColiddingWithPlayer()) {
				
				 if (!World.isFree((int) (x + speed), this.getY())) { control = true; } else {
				 if (!isColiddingWithPlayer()) {
				 
				 // Verifica a posição do jogador em relação ao inimigo para movimentalo, //
				  verifica tambem se ele esta colidindo com algo, Verifica a distancia que o //
				  inimigo esta do jogador if ((int) x < Game.player.getX() &&
				  World.isFree((int) (x + speed), this.getY()) && !isColidding((int) (x +
				  speed), this.getY())) {
				  
				  x += speed; last = 1;
				  
				  left = true; this.moved = true;
				  
				  }
				  
				  else if ((int) x > Game.player.getX() && World.isFree((int) (x - speed),
				  this.getY()) && !isColidding((int) (x - speed), this.getY())) {
				  
				  x -= speed; last = 2;
				  
				  right = true; this.moved = true;
				  
				  }
				  
				  if ((int) y < Game.player.getY() && World.isFree(this.getX(), (int) (y +
				  speed)) && !isColidding(this.getX(), (int) (y + speed))) {
				  
				  y += speed; last = 3;
				  
				  up = true; this.moved = true;
				  
				  }
				  
				  else if ((int) y > Game.player.getY() && World.isFree(this.getX(), (int) (y -
				  speed)) && !isColidding(this.getX(), (int) (y - speed))) {
				  
				  last = 4; y -= speed;
				  
				  setDown(true); this.moved = true;
				  
				  } else {
				  
				  switch (last) {
				  
				  case 1:
				  
				  left = true;
				  
				  break;
				  
				  case 2:
				  
				  right = true;
				  
				  break;
				  
				  case 3:
				  
				  up = true;
				  
				  break;
				  
				  case 4:
				  
				  setDown(true);
				  
				  break;
				  
				  }
				  
				  }
				  
				  } else {
				  
				  // Player colidindo com inimigo
				  
				  // Decrementa um valor aleatorio entre 0 e 3 da vida do jogador if
				  (Game.player.sobrevida >= 1) {
				  
				  Game.player.sobrevida -= Game.rand.nextInt(MaxDamege);
				  
				  if (Game.player.sobrevida < 0) {
				  
				  Game.player.life += Game.player.sobrevida; Game.player.sobrevida = 0;
				  
				  }
				  
				  } else {
				  
				  Game.player.life -= Game.rand.nextInt(MaxDamege);
				  
				  }
				  
				  Game.player.isDamege = true; Sound.DamegePlayer.play();
				  
				  } 
				 }
				 	// if (control) {
				/*if (!isColiddingWithPlayer()) {
					if (path == null || path.size() == 0) {
						Vector2i start = new Vector2i((int) (x / World.TILE_SIZE), (int) (y / World.TILE_SIZE));
						Vector2i end = new Vector2i((int) (Game.player.x / World.TILE_SIZE),
								(int) (Game.player.y / World.TILE_SIZE));
						path = AStar.findPath(Game.world, start, end);

					}

					followPath(path);
				} else {
					if (Game.player.sobrevida >= 1) {

						Game.player.sobrevida -= Game.rand.nextInt(MaxDamege);

						if (Game.player.sobrevida < 0) {

							Game.player.life += Game.player.sobrevida;
							Game.player.sobrevida = 0;

						}

					} else {

						Game.player.life -= Game.rand.nextInt(MaxDamege);

					}

					Game.player.isDamege = true;
					Sound.DamegePlayer.play();

				}*/
			}
		}
		// }

		// Verifica se o inimigo esta se movimentando, caso esteja o array sera
		// executado do 2 ao 5 caso nao do 0 ao 1

		if (moved) {

			// incrementa frames para ter controle do tempo de animação

			frames++;

			if (frames == maxFrames) {

				frames = 0;
				index++;

				// Retorna a animação para o 0
				if (index > maxIndex)
					index = 2;

			}

		} else {

			// Mesma coisa porem para o personagem parado
			frames++;

			if (frames == maxFrames) {

				frames = 0;
				index++;

				if (index > 1)
					index = 0;
			}
		}

		// System.out.println(index);
		// Destroi o inimigo com vida 0
		if (life <= 0) {

			destroySelf();
			return;

		}

		if (isDamaged) {

			this.damageCurrent++;

			if (this.damageCurrent == this.damageFrames) {

				this.damageCurrent = 0;
				this.isDamaged = false;

			}
		}

		collidionBullet();

		if (life <= 0) {

			destroySelf();

		}
		if(this.isColiddingWithPlayer()) {
			if(Game.player.sobrevida > 0) {
				Game.player.sobrevida -= Game.rand.nextInt(MaxDamege);
				if(Game.player.sobrevida < 0) {
					Game.player.life += Game.player.sobrevida;
					Game.player.sobrevida = 0;
				}
			}else {
				Game.player.life -= Game.rand.nextInt(MaxDamege);
			}
			Game.player.isDamege = true;
			Sound.DamegePlayer.play();
		}
	}

	public void collidionBullet() {

		for (int i = 0; i < Game.Bullets.size(); i++) {

			Entity e = Game.Bullets.get(i);

			if (e instanceof Bullet) {

				if (Entity.isColidding(this, e)) {

					Sound.DamegeEnemy.play();
					life--;

					Game.Bullets.remove(i);
					return;

				}
			}
		}
	}

	public void destroySelf() {

		Game.enemies.remove(this);
		Game.entities.remove(this);

	}

	public void render(Graphics g) {

		if (this.isDamaged) {

			if (right) {

				this.right = false;
				this.moved = false;

				g.drawImage(RightEnemyDamege[index], this.getX() - Camera.x, this.getY() - Camera.y, null);

			} else if (left) {

				this.left = false;
				this.moved = false;

				g.drawImage(LeftEnemyDamege[index], this.getX() - Camera.x, this.getY() - Camera.y, null);

			} else if (up) {

				this.up = false;
				this.moved = false;

				g.drawImage(TopEnemyDamege[index], this.getX() - Camera.x, this.getY() - Camera.y, null);

			} else {

				setDown(false);
				this.moved = false;

				g.drawImage(DownEnemyDamege[index], this.getX() - Camera.x, this.getY() - Camera.y, null);

			}
		} else {

			if (right) {

				this.right = false;
				this.moved = false;

				g.drawImage(RightEnemy[index], this.getX() - Camera.x, this.getY() - Camera.y, null);

			} else if (left) {

				this.left = false;
				this.moved = false;

				g.drawImage(LeftEnemy[index], this.getX() - Camera.x, this.getY() - Camera.y, null);

			} else if (up) {

				this.up = false;
				this.moved = false;

				g.drawImage(TopEnemy[index], this.getX() - Camera.x, this.getY() - Camera.y, null);

			} else {

				setDown(false);
				this.moved = false;

				g.drawImage(DownEnemy[index], this.getX() - Camera.x, this.getY() - Camera.y, null);

			}
		}
	}

	public boolean isDown() {
		return down;
	}

	public void setDown(boolean down) {
		this.down = down;
	}

	public boolean isDamege() {
		return isDamege;
	}

	public void setDamege(boolean isDamege) {
		this.isDamege = isDamege;
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3750)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2203)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2203)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3302)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:175)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:160)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-08-06 14:11:02.026
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3750)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2203)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2203)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3302)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:175)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:160)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-08-06 14:11:02.041
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3750)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2203)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2203)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3302)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:175)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:160)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2020-08-06 14:11:02.789
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.HagekopStudios.entities;

import java.awt.Graphics;
import java.awt.Rectangle;
import java.awt.image.BufferedImage;

import com.HagekopStudios.main.Game;
import com.HagekopStudios.main.Sound;
import com.HagekopStudios.world.AStar;
import com.HagekopStudios.world.Camera;
import com.HagekopStudios.world.Vector2i;
import com.HagekopStudios.world.World;

public class Enemy extends Entity {

	// Declaração dos valores inalteraveis
	private static final int maxIndex = 4;
	private static final int maxFrames = 20;
	public static final int speed = 1;

	// Declaração dos Arrays sprites
	private BufferedImage[] RightEnemy;
	private BufferedImage[] LeftEnemy;
	private BufferedImage[] TopEnemy;
	private BufferedImage[] DownEnemy;
	private BufferedImage[] RightEnemyDamege;
	private BufferedImage[] LeftEnemyDamege;
	private BufferedImage[] TopEnemyDamege;
	private BufferedImage[] DownEnemyDamege;

	// Variaveis padroes

	private int life = 1;
	private int frames = 0;
	private int index = 0;
	private int damageFrames = 10;
	private int damageCurrent = 0;
	private int last = 0;
	private int MaxDamege = 3;

	private boolean isDamege = false;
	private boolean isDamaged = false;

	// Construtor para instancia
	public Enemy(int x, int y, int width, int height, BufferedImage Spritesheet) {
		super(x, y, width, height, null);

		// Declaraçao da quantidade de quadros dos Sprites
		RightEnemy = new BufferedImage[5];
		LeftEnemy = new BufferedImage[5];
		TopEnemy = new BufferedImage[5];
		DownEnemy = new BufferedImage[5];
		RightEnemyDamege = new BufferedImage[5];
		LeftEnemyDamege = new BufferedImage[5];
		TopEnemyDamege = new BufferedImage[5];
		DownEnemyDamege = new BufferedImage[5];

		// Laços para pegar os Sprites separadamente montando a animação
		for (int i = 0; i < 5; i++) {

			RightEnemy[i] = Game.spritesheet.getSprite(160, 80 + (World.TILE_SIZE * i), World.TILE_SIZE,
					World.TILE_SIZE);

		}

		for (int i = 0; i < 5; i++) {

			LeftEnemy[i] = Game.spritesheet.getSprite(144, 80 + (World.TILE_SIZE * i), World.TILE_SIZE,
					World.TILE_SIZE);

		}

		for (int i = 0; i < 5; i++) {

			TopEnemy[i] = Game.spritesheet.getSprite(112, 80 + (World.TILE_SIZE * i), World.TILE_SIZE, World.TILE_SIZE);

		}

		for (int i = 0; i < 5; i++) {

			DownEnemy[i] = Game.spritesheet.getSprite(128, 80 + (World.TILE_SIZE * i), World.TILE_SIZE,
					World.TILE_SIZE);

		}

		for (int i = 0; i < 5; i++) {

			RightEnemyDamege[i] = Game.spritesheet.getSprite(160, 176 + (World.TILE_SIZE * i), World.TILE_SIZE,
					World.TILE_SIZE);

		}

		for (int i = 0; i < 5; i++) {

			LeftEnemyDamege[i] = Game.spritesheet.getSprite(144, 176 + (World.TILE_SIZE * i), World.TILE_SIZE,
					World.TILE_SIZE);

		}

		for (int i = 0; i < 5; i++) {

			TopEnemyDamege[i] = Game.spritesheet.getSprite(112, 176 + (World.TILE_SIZE * i), World.TILE_SIZE,
					World.TILE_SIZE);

		}

		for (int i = 0; i < 5; i++) {

			DownEnemyDamege[i] = Game.spritesheet.getSprite(128, 176 + (World.TILE_SIZE * i), World.TILE_SIZE,
					World.TILE_SIZE);

		}

	}

	public boolean control = false, control1 = false;

	// Logica do Inimigo
	public void tick() {

		// Caso nao exista colizão entre o player e o inimigo, o inimigo devera andar
		// até o player

		if (this.Distancia(this.getX(), this.getY(), Game.player.getX(), Game.player.getY()) <= 200) {
			if (!isColiddingWithPlayer()) {
				
				 if (!World.isFree((int) (x + speed), this.getY())) { control = true; } else {
				 if (!isColiddingWithPlayer()) {
				 
				 // Verifica a posição do jogador em relação ao inimigo para movimentalo, //
				  verifica tambem se ele esta colidindo com algo, Verifica a distancia que o //
				  inimigo esta do jogador if ((int) x < Game.player.getX() &&
				  World.isFree((int) (x + speed), this.getY()) && !isColidding((int) (x +
				  speed), this.getY())) {
				  
				  x += speed; last = 1;
				  
				  left = true; this.moved = true;
				  
				  }
				  
				  else if ((int) x > Game.player.getX() && World.isFree((int) (x - speed),
				  this.getY()) && !isColidding((int) (x - speed), this.getY())) {
				  
				  x -= speed; last = 2;
				  
				  right = true; this.moved = true;
				  
				  }
				  
				  if ((int) y < Game.player.getY() && World.isFree(this.getX(), (int) (y +
				  speed)) && !isColidding(this.getX(), (int) (y + speed))) {
				  
				  y += speed; last = 3;
				  
				  up = true; this.moved = true;
				  
				  }
				  
				  else if ((int) y > Game.player.getY() && World.isFree(this.getX(), (int) (y -
				  speed)) && !isColidding(this.getX(), (int) (y - speed))) {
				  
				  last = 4; y -= speed;
				  
				  setDown(true); this.moved = true;
				  
				  } else {
				  
				  switch (last) {
				  
				  case 1:
				  
				  left = true;
				  
				  break;
				  
				  case 2:
				  
				  right = true;
				  
				  break;
				  
				  case 3:
				  
				  up = true;
				  
				  break;
				  
				  case 4:
				  
				  setDown(true);
				  
				  break;
				  
				  }
				  
				  }
				  
				  } else {
				  
				  // Player colidindo com inimigo
				  
				  // Decrementa um valor aleatorio entre 0 e 3 da vida do jogador if
				  (Game.player.sobrevida >= 1) {
				  
				  Game.player.sobrevida -= Game.rand.nextInt(MaxDamege);
				  
				  if (Game.player.sobrevida < 0) {
				  
				  Game.player.life += Game.player.sobrevida; Game.player.sobrevida = 0;
				  
				  }
				  
				  } else {
				  
				  Game.player.life -= Game.rand.nextInt(MaxDamege);
				  
				  }
				  
				  Game.player.isDamege = true; Sound.DamegePlayer.play();
				  
				  } 
				 }
				 	// if (control) {
				/*if (!isColiddingWithPlayer()) {
					if (path == null || path.size() == 0) {
						Vector2i start = new Vector2i((int) (x / World.TILE_SIZE), (int) (y / World.TILE_SIZE));
						Vector2i end = new Vector2i((int) (Game.player.x / World.TILE_SIZE),
								(int) (Game.player.y / World.TILE_SIZE));
						path = AStar.findPath(Game.world, start, end);

					}

					followPath(path);
				} else {
					if (Game.player.sobrevida >= 1) {

						Game.player.sobrevida -= Game.rand.nextInt(MaxDamege);

						if (Game.player.sobrevida < 0) {

							Game.player.life += Game.player.sobrevida;
							Game.player.sobrevida = 0;

						}

					} else {

						Game.player.life -= Game.rand.nextInt(MaxDamege);

					}

					Game.player.isDamege = true;
					Sound.DamegePlayer.play();

				}*/
			}
		}
		// }

		// Verifica se o inimigo esta se movimentando, caso esteja o array sera
		// executado do 2 ao 5 caso nao do 0 ao 1

		if (moved) {

			// incrementa frames para ter controle do tempo de animação

			frames++;

			if (frames == maxFrames) {

				frames = 0;
				index++;

				// Retorna a animação para o 0
				if (index > maxIndex)
					index = 2;

			}

		} else {

			// Mesma coisa porem para o personagem parado
			frames++;

			if (frames == maxFrames) {

				frames = 0;
				index++;

				if (index > 1)
					index = 0;
			}
		}

		// System.out.println(index);
		// Destroi o inimigo com vida 0
		if (life <= 0) {

			destroySelf();
			return;

		}

		if (isDamaged) {

			this.damageCurrent++;

			if (this.damageCurrent == this.damageFrames) {

				this.damageCurrent = 0;
				this.isDamaged = false;

			}
		}

		collidionBullet();

		if (life <= 0) {

			destroySelf();

		}
		if(this.isColiddingWithPlayer()) {
			if(Game.player.sobrevida > 0) {
				Game.player.sobrevida -= Game.rand.nextInt(MaxDamege);
				if(Game.player.sobrevida < 0) {
					Game.player.life += Game.player.sobrevida;
					Game.player.sobrevida = 0;
				}
			}else {
				Game.player.life -= Game.rand.nextInt(MaxDamege);
			}
			Game.player.isDamege = true;
			Sound.DamegePlayer.play();
		}
	}

	public void collidionBullet() {

		for (int i = 0; i < Game.Bullets.size(); i++) {

			Entity e = Game.Bullets.get(i);

			if (e instanceof Bullet) {

				if (Entity.isColidding(this, e)) {

					Sound.DamegeEnemy.play();
					life--;

					Game.Bullets.remove(i);
					return;

				}
			}
		}
	}

	public void destroySelf() {

		Game.enemies.remove(this);
		Game.entities.remove(this);

	}

	public void render(Graphics g) {

		if (this.isDamaged) {

			if (right) {

				this.right = false;
				this.moved = false;

				g.drawImage(RightEnemyDamege[index], this.getX() - Camera.x, this.getY() - Camera.y, null);

			} else if (left) {

				this.left = false;
				this.moved = false;

				g.drawImage(LeftEnemyDamege[index], this.getX() - Camera.x, this.getY() - Camera.y, null);

			} else if (up) {

				this.up = false;
				this.moved = false;

				g.drawImage(TopEnemyDamege[index], this.getX() - Camera.x, this.getY() - Camera.y, null);

			} else {

				setDown(false);
				this.moved = false;

				g.drawImage(DownEnemyDamege[index], this.getX() - Camera.x, this.getY() - Camera.y, null);

			}
		} else {

			if (right) {

				this.right = false;
				this.moved = false;

				g.drawImage(RightEnemy[index], this.getX() - Camera.x, this.getY() - Camera.y, null);

			} else if (left) {

				this.left = false;
				this.moved = false;

				g.drawImage(LeftEnemy[index], this.getX() - Camera.x, this.getY() - Camera.y, null);

			} else if (up) {

				this.up = false;
				this.moved = false;

				g.drawImage(TopEnemy[index], this.getX() - Camera.x, this.getY() - Camera.y, null);

			} else {

				setDown(false);
				this.moved = false;

				g.drawImage(DownEnemy[index], this.getX() - Camera.x, this.getY() - Camera.y, null);

			}
		}
	}

	public boolean isDown() {
		return down;
	}

	public void setDown(boolean down) {
		this.down = down;
	}

	public boolean isDamege() {
		return isDamege;
	}

	public void setDamege(boolean isDamege) {
		this.isDamege = isDamege;
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3750)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2203)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2203)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3302)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:306)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:192)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4005)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3633)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1158)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1047)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:658)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:154)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-08-06 14:11:02.804
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3750)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2203)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2203)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3302)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:306)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:192)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4005)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3633)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1158)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1047)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:658)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:154)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-08-06 14:11:02.820
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3750)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2203)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2203)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3302)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:306)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:192)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4005)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3633)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1158)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1047)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:658)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:154)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.jdt.core 4 4 2020-08-06 14:11:02.841
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.HagekopStudios.entities;

import java.awt.Graphics;
import java.awt.Rectangle;
import java.awt.image.BufferedImage;

import com.HagekopStudios.main.Game;
import com.HagekopStudios.main.Sound;
import com.HagekopStudios.world.AStar;
import com.HagekopStudios.world.Camera;
import com.HagekopStudios.world.Vector2i;
import com.HagekopStudios.world.World;

public class Enemy extends Entity {

	// Declaração dos valores inalteraveis
	private static final int maxIndex = 4;
	private static final int maxFrames = 20;
	public static final int speed = 1;

	// Declaração dos Arrays sprites
	private BufferedImage[] RightEnemy;
	private BufferedImage[] LeftEnemy;
	private BufferedImage[] TopEnemy;
	private BufferedImage[] DownEnemy;
	private BufferedImage[] RightEnemyDamege;
	private BufferedImage[] LeftEnemyDamege;
	private BufferedImage[] TopEnemyDamege;
	private BufferedImage[] DownEnemyDamege;

	// Variaveis padroes

	private int life = 1;
	private int frames = 0;
	private int index = 0;
	private int damageFrames = 10;
	private int damageCurrent = 0;
	private int last = 0;
	private int MaxDamege = 3;

	private boolean isDamege = false;
	private boolean isDamaged = false;

	// Construtor para instancia
	public Enemy(int x, int y, int width, int height, BufferedImage Spritesheet) {
		super(x, y, width, height, null);

		// Declaraçao da quantidade de quadros dos Sprites
		RightEnemy = new BufferedImage[5];
		LeftEnemy = new BufferedImage[5];
		TopEnemy = new BufferedImage[5];
		DownEnemy = new BufferedImage[5];
		RightEnemyDamege = new BufferedImage[5];
		LeftEnemyDamege = new BufferedImage[5];
		TopEnemyDamege = new BufferedImage[5];
		DownEnemyDamege = new BufferedImage[5];

		// Laços para pegar os Sprites separadamente montando a animação
		for (int i = 0; i < 5; i++) {

			RightEnemy[i] = Game.spritesheet.getSprite(160, 80 + (World.TILE_SIZE * i), World.TILE_SIZE,
					World.TILE_SIZE);

		}

		for (int i = 0; i < 5; i++) {

			LeftEnemy[i] = Game.spritesheet.getSprite(144, 80 + (World.TILE_SIZE * i), World.TILE_SIZE,
					World.TILE_SIZE);

		}

		for (int i = 0; i < 5; i++) {

			TopEnemy[i] = Game.spritesheet.getSprite(112, 80 + (World.TILE_SIZE * i), World.TILE_SIZE, World.TILE_SIZE);

		}

		for (int i = 0; i < 5; i++) {

			DownEnemy[i] = Game.spritesheet.getSprite(128, 80 + (World.TILE_SIZE * i), World.TILE_SIZE,
					World.TILE_SIZE);

		}

		for (int i = 0; i < 5; i++) {

			RightEnemyDamege[i] = Game.spritesheet.getSprite(160, 176 + (World.TILE_SIZE * i), World.TILE_SIZE,
					World.TILE_SIZE);

		}

		for (int i = 0; i < 5; i++) {

			LeftEnemyDamege[i] = Game.spritesheet.getSprite(144, 176 + (World.TILE_SIZE * i), World.TILE_SIZE,
					World.TILE_SIZE);

		}

		for (int i = 0; i < 5; i++) {

			TopEnemyDamege[i] = Game.spritesheet.getSprite(112, 176 + (World.TILE_SIZE * i), World.TILE_SIZE,
					World.TILE_SIZE);

		}

		for (int i = 0; i < 5; i++) {

			DownEnemyDamege[i] = Game.spritesheet.getSprite(128, 176 + (World.TILE_SIZE * i), World.TILE_SIZE,
					World.TILE_SIZE);

		}

	}

	public boolean control = false, control1 = false;

	// Logica do Inimigo
	public void tick() {

		// Caso nao exista colizão entre o player e o inimigo, o inimigo devera andar
		// até o player

		if (this.Distancia(this.getX(), this.getY(), Game.player.getX(), Game.player.getY()) <= 200) {
			if (!isColiddingWithPlayer()) {
				
				 if (!World.isFree((int) (x + speed), this.getY())) { control = true; } else {
				 if (!isColiddingWithPlayer()) {
				 
				 // Verifica a posição do jogador em relação ao inimigo para movimentalo, //
				  verifica tambem se ele esta colidindo com algo, Verifica a distancia que o //
				  inimigo esta do jogador if ((int) x < Game.player.getX() &&
				  World.isFree((int) (x + speed), this.getY()) && !isColidding((int) (x +
				  speed), this.getY())) {
				  
				  x += speed; last = 1;
				  
				  left = true; this.moved = true;
				  
				  }
				  
				  else if ((int) x > Game.player.getX() && World.isFree((int) (x - speed),
				  this.getY()) && !isColidding((int) (x - speed), this.getY())) {
				  
				  x -= speed; last = 2;
				  
				  right = true; this.moved = true;
				  
				  }
				  
				  if ((int) y < Game.player.getY() && World.isFree(this.getX(), (int) (y +
				  speed)) && !isColidding(this.getX(), (int) (y + speed))) {
				  
				  y += speed; last = 3;
				  
				  up = true; this.moved = true;
				  
				  }
				  
				  else if ((int) y > Game.player.getY() && World.isFree(this.getX(), (int) (y -
				  speed)) && !isColidding(this.getX(), (int) (y - speed))) {
				  
				  last = 4; y -= speed;
				  
				  setDown(true); this.moved = true;
				  
				  } else {
				  
				  switch (last) {
				  
				  case 1:
				  
				  left = true;
				  
				  break;
				  
				  case 2:
				  
				  right = true;
				  
				  break;
				  
				  case 3:
				  
				  up = true;
				  
				  break;
				  
				  case 4:
				  
				  setDown(true);
				  
				  break;
				  
				  }
				  
				  }
				  
				  } else {
				  
				  // Player colidindo com inimigo
				  
				  // Decrementa um valor aleatorio entre 0 e 3 da vida do jogador if
				  (Game.player.sobrevida >= 1) {
				  
				  Game.player.sobrevida -= Game.rand.nextInt(MaxDamege);
				  
				  if (Game.player.sobrevida < 0) {
				  
				  Game.player.life += Game.player.sobrevida; Game.player.sobrevida = 0;
				  
				  }
				  
				  } else {
				  
				  Game.player.life -= Game.rand.nextInt(MaxDamege);
				  
				  }
				  
				  Game.player.isDamege = true; Sound.DamegePlayer.play();
				  
				  } 
				 }
				 	// if (control) {
				/*if (!isColiddingWithPlayer()) {
					if (path == null || path.size() == 0) {
						Vector2i start = new Vector2i((int) (x / World.TILE_SIZE), (int) (y / World.TILE_SIZE));
						Vector2i end = new Vector2i((int) (Game.player.x / World.TILE_SIZE),
								(int) (Game.player.y / World.TILE_SIZE));
						path = AStar.findPath(Game.world, start, end);

					}

					followPath(path);
				} else {
					if (Game.player.sobrevida >= 1) {

						Game.player.sobrevida -= Game.rand.nextInt(MaxDamege);

						if (Game.player.sobrevida < 0) {

							Game.player.life += Game.player.sobrevida;
							Game.player.sobrevida = 0;

						}

					} else {

						Game.player.life -= Game.rand.nextInt(MaxDamege);

					}

					Game.player.isDamege = true;
					Sound.DamegePlayer.play();

				}*/
			}
		}
		// }

		// Verifica se o inimigo esta se movimentando, caso esteja o array sera
		// executado do 2 ao 5 caso nao do 0 ao 1

		if (moved) {

			// incrementa frames para ter controle do tempo de animação

			frames++;

			if (frames == maxFrames) {

				frames = 0;
				index++;

				// Retorna a animação para o 0
				if (index > maxIndex)
					index = 2;

			}

		} else {

			// Mesma coisa porem para o personagem parado
			frames++;

			if (frames == maxFrames) {

				frames = 0;
				index++;

				if (index > 1)
					index = 0;
			}
		}

		// System.out.println(index);
		// Destroi o inimigo com vida 0
		if (life <= 0) {

			destroySelf();
			return;

		}

		if (isDamaged) {

			this.damageCurrent++;

			if (this.damageCurrent == this.damageFrames) {

				this.damageCurrent = 0;
				this.isDamaged = false;

			}
		}

		collidionBullet();

		if (life <= 0) {

			destroySelf();

		}
		if(this.isColiddingWithPlayer()) {
			if(Game.player.sobrevida > 0) {
				Game.player.sobrevida -= Game.rand.nextInt(MaxDamege);
				if(Game.player.sobrevida < 0) {
					Game.player.life += Game.player.sobrevida;
					Game.player.sobrevida = 0;
				}
			}else {
				Game.player.life -= Game.rand.nextInt(MaxDamege);
			}
			Game.player.isDamege = true;
			Sound.DamegePlayer.play();
		}
	}

	public void collidionBullet() {

		for (int i = 0; i < Game.Bullets.size(); i++) {

			Entity e = Game.Bullets.get(i);

			if (e instanceof Bullet) {

				if (Entity.isColidding(this, e)) {

					Sound.DamegeEnemy.play();
					life--;

					Game.Bullets.remove(i);
					return;

				}
			}
		}
	}

	public void destroySelf() {

		Game.enemies.remove(this);
		Game.entities.remove(this);

	}

	public void render(Graphics g) {

		if (this.isDamaged) {

			if (right) {

				this.right = false;
				this.moved = false;

				g.drawImage(RightEnemyDamege[index], this.getX() - Camera.x, this.getY() - Camera.y, null);

			} else if (left) {

				this.left = false;
				this.moved = false;

				g.drawImage(LeftEnemyDamege[index], this.getX() - Camera.x, this.getY() - Camera.y, null);

			} else if (up) {

				this.up = false;
				this.moved = false;

				g.drawImage(TopEnemyDamege[index], this.getX() - Camera.x, this.getY() - Camera.y, null);

			} else {

				setDown(false);
				this.moved = false;

				g.drawImage(DownEnemyDamege[index], this.getX() - Camera.x, this.getY() - Camera.y, null);

			}
		} else {

			if (right) {

				this.right = false;
				this.moved = false;

				g.drawImage(RightEnemy[index], this.getX() - Camera.x, this.getY() - Camera.y, null);

			} else if (left) {

				this.left = false;
				this.moved = false;

				g.drawImage(LeftEnemy[index], this.getX() - Camera.x, this.getY() - Camera.y, null);

			} else if (up) {

				this.up = false;
				this.moved = false;

				g.drawImage(TopEnemy[index], this.getX() - Camera.x, this.getY() - Camera.y, null);

			} else {

				setDown(false);
				this.moved = false;

				g.drawImage(DownEnemy[index], this.getX() - Camera.x, this.getY() - Camera.y, null);

			}
		}
	}

	public boolean isDown() {
		return down;
	}

	public void setDown(boolean down) {
		this.down = down;
	}

	public boolean isDamege() {
		return isDamege;
	}

	public void setDamege(boolean isDamege) {
		this.isDamege = isDamege;
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3750)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2203)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2203)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3302)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving.createQuickFixAST(ASTResolving.java:1022)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:131)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:306)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:192)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4005)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3633)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1158)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1047)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:658)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:154)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.ui 4 0 2020-08-06 14:11:02.858
!MESSAGE Unhandled event loop exception
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3750)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2203)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2203)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3302)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.internal.core.manipulation.dom.ASTResolving.createQuickFixAST(ASTResolving.java:1022)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:131)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:101)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:79)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:306)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:192)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1151)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1120)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:884)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:237)
	at org.eclipse.jface.text.TextViewerHoverManager.lambda$3(TextViewerHoverManager.java:227)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4005)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3633)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1158)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1047)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:658)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:557)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:154)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:150)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:657)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:594)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1447)

!ENTRY org.eclipse.jdt.core 4 4 2020-08-06 14:11:02.882
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.HagekopStudios.entities;

import java.awt.Graphics;
import java.awt.Rectangle;
import java.awt.image.BufferedImage;

import com.HagekopStudios.main.Game;
import com.HagekopStudios.main.Sound;
import com.HagekopStudios.world.AStar;
import com.HagekopStudios.world.Camera;
import com.HagekopStudios.world.Vector2i;
import com.HagekopStudios.world.World;

public class Enemy extends Entity {

	// Declaração dos valores inalteraveis
	private static final int maxIndex = 4;
	private static final int maxFrames = 20;
	public static final int speed = 1;

	// Declaração dos Arrays sprites
	private BufferedImage[] RightEnemy;
	private BufferedImage[] LeftEnemy;
	private BufferedImage[] TopEnemy;
	private BufferedImage[] DownEnemy;
	private BufferedImage[] RightEnemyDamege;
	private BufferedImage[] LeftEnemyDamege;
	private BufferedImage[] TopEnemyDamege;
	private BufferedImage[] DownEnemyDamege;

	// Variaveis padroes

	private int life = 1;
	private int frames = 0;
	private int index = 0;
	private int damageFrames = 10;
	private int damageCurrent = 0;
	private int last = 0;
	private int MaxDamege = 3;

	private boolean isDamege = false;
	private boolean isDamaged = false;

	// Construtor para instancia
	public Enemy(int x, int y, int width, int height, BufferedImage Spritesheet) {
		super(x, y, width, height, null);

		// Declaraçao da quantidade de quadros dos Sprites
		RightEnemy = new BufferedImage[5];
		LeftEnemy = new BufferedImage[5];
		TopEnemy = new BufferedImage[5];
		DownEnemy = new BufferedImage[5];
		RightEnemyDamege = new BufferedImage[5];
		LeftEnemyDamege = new BufferedImage[5];
		TopEnemyDamege = new BufferedImage[5];
		DownEnemyDamege = new BufferedImage[5];

		// Laços para pegar os Sprites separadamente montando a animação
		for (int i = 0; i < 5; i++) {

			RightEnemy[i] = Game.spritesheet.getSprite(160, 80 + (World.TILE_SIZE * i), World.TILE_SIZE,
					World.TILE_SIZE);

		}

		for (int i = 0; i < 5; i++) {

			LeftEnemy[i] = Game.spritesheet.getSprite(144, 80 + (World.TILE_SIZE * i), World.TILE_SIZE,
					World.TILE_SIZE);

		}

		for (int i = 0; i < 5; i++) {

			TopEnemy[i] = Game.spritesheet.getSprite(112, 80 + (World.TILE_SIZE * i), World.TILE_SIZE, World.TILE_SIZE);

		}

		for (int i = 0; i < 5; i++) {

			DownEnemy[i] = Game.spritesheet.getSprite(128, 80 + (World.TILE_SIZE * i), World.TILE_SIZE,
					World.TILE_SIZE);

		}

		for (int i = 0; i < 5; i++) {

			RightEnemyDamege[i] = Game.spritesheet.getSprite(160, 176 + (World.TILE_SIZE * i), World.TILE_SIZE,
					World.TILE_SIZE);

		}

		for (int i = 0; i < 5; i++) {

			LeftEnemyDamege[i] = Game.spritesheet.getSprite(144, 176 + (World.TILE_SIZE * i), World.TILE_SIZE,
					World.TILE_SIZE);

		}

		for (int i = 0; i < 5; i++) {

			TopEnemyDamege[i] = Game.spritesheet.getSprite(112, 176 + (World.TILE_SIZE * i), World.TILE_SIZE,
					World.TILE_SIZE);

		}

		for (int i = 0; i < 5; i++) {

			DownEnemyDamege[i] = Game.spritesheet.getSprite(128, 176 + (World.TILE_SIZE * i), World.TILE_SIZE,
					World.TILE_SIZE);

		}

	}

	public boolean control = false, control1 = false;

	// Logica do Inimigo
	public void tick() {

		// Caso nao exista colizão entre o player e o inimigo, o inimigo devera andar
		// até o player

		if (this.Distancia(this.getX(), this.getY(), Game.player.getX(), Game.player.getY()) <= 200) {
			if (!isColiddingWithPlayer()) {
				
				 if (!World.isFree((int) (x + speed), this.getY())) { control = true; } else {
				 if (!isColiddingWithPlayer()) {
				 
				 // Verifica a posição do jogador em relação ao inimigo para movimentalo, //
				  verifica tambem se ele esta colidindo com algo, Verifica a distancia que o //
				  inimigo esta do jogador if ((int) x < Game.player.getX() &&
				  World.isFree((int) (x + speed), this.getY()) && !isColidding((int) (x +
				  speed), this.getY())) {
				  
				  x += speed; last = 1;
				  
				  left = true; this.moved = true;
				  
				  }
				  
				  else if ((int) x > Game.player.getX() && World.isFree((int) (x - speed),
				  this.getY()) && !isColidding((int) (x - speed), this.getY())) {
				  
				  x -= speed; last = 2;
				  
				  right = true; this.moved = true;
				  
				  }
				  
				  if ((int) y < Game.player.getY() && World.isFree(this.getX(), (int) (y +
				  speed)) && !isColidding(this.getX(), (int) (y + speed))) {
				  
				  y += speed; last = 3;
				  
				  up = true; this.moved = true;
				  
				  }
				  
				  else if ((int) y > Game.player.getY() && World.isFree(this.getX(), (int) (y -
				  speed)) && !isColidding(this.getX(), (int) (y - speed))) {
				  
				  last = 4; y -= speed;
				  
				  setDown(true); this.moved = true;
				  
				  } else {
				  
				  switch (last) {
				  
				  case 1:
				  
				  left = true;
				  
				  break;
				  
				  case 2:
				  
				  right = true;
				  
				  break;
				  
				  case 3:
				  
				  up = true;
				  
				  break;
				  
				  case 4:
				  
				  setDown(true);
				  
				  break;
				  
				  }
				  
				  }
				  
				  } else {
				  
				  // Player colidindo com inimigo
				  
				  // Decrementa um valor aleatorio entre 0 e 3 da vida do jogador if
				  (Game.player.sobrevida >= 1) {
				  
				  Game.player.sobrevida -= Game.rand.nextInt(MaxDamege);
				  
				  if (Game.player.sobrevida < 0) {
				  
				  Game.player.life += Game.player.sobrevida; Game.player.sobrevida = 0;
				  
				  }
				  
				  } else {
				  
				  Game.player.life -= Game.rand.nextInt(MaxDamege);
				  
				  }
				  
				  Game.player.isDamege = true; Sound.DamegePlayer.play();
				  
				  } 
				 }
				 	// if (control) {
				/*if (!isColiddingWithPlayer()) {
					if (path == null || path.size() == 0) {
						Vector2i start = new Vector2i((int) (x / World.TILE_SIZE), (int) (y / World.TILE_SIZE));
						Vector2i end = new Vector2i((int) (Game.player.x / World.TILE_SIZE),
								(int) (Game.player.y / World.TILE_SIZE));
						path = AStar.findPath(Game.world, start, end);

					}

					followPath(path);
				} else {
					if (Game.player.sobrevida >= 1) {

						Game.player.sobrevida -= Game.rand.nextInt(MaxDamege);

						if (Game.player.sobrevida < 0) {

							Game.player.life += Game.player.sobrevida;
							Game.player.sobrevida = 0;

						}

					} else {

						Game.player.life -= Game.rand.nextInt(MaxDamege);

					}

					Game.player.isDamege = true;
					Sound.DamegePlayer.play();

				}*/
			}
		}
		// }

		// Verifica se o inimigo esta se movimentando, caso esteja o array sera
		// executado do 2 ao 5 caso nao do 0 ao 1

		if (moved) {

			// incrementa frames para ter controle do tempo de animação

			frames++;

			if (frames == maxFrames) {

				frames = 0;
				index++;

				// Retorna a animação para o 0
				if (index > maxIndex)
					index = 2;

			}

		} else {

			// Mesma coisa porem para o personagem parado
			frames++;

			if (frames == maxFrames) {

				frames = 0;
				index++;

				if (index > 1)
					index = 0;
			}
		}

		// System.out.println(index);
		// Destroi o inimigo com vida 0
		if (life <= 0) {

			destroySelf();
			return;

		}

		if (isDamaged) {

			this.damageCurrent++;

			if (this.damageCurrent == this.damageFrames) {

				this.damageCurrent = 0;
				this.isDamaged = false;

			}
		}

		collidionBullet();

		if (life <= 0) {

			destroySelf();

		}
		if(this.isColiddingWithPlayer()) {
			if(Game.player.sobrevida > 0) {
				Game.player.sobrevida -= Game.rand.nextInt(MaxDamege);
				if(Game.player.sobrevida < 0) {
					Game.player.life += Game.player.sobrevida;
					Game.player.sobrevida = 0;
				}
			}else {
				Game.player.life -= Game.rand.nextInt(MaxDamege);
			}
			Game.player.isDamege = true;
			Sound.DamegePlayer.play();
		}
	}

	public void collidionBullet() {

		for (int i = 0; i < Game.Bullets.size(); i++) {

			Entity e = Game.Bullets.get(i);

			if (e instanceof Bullet) {

				if (Entity.isColidding(this, e)) {

					Sound.DamegeEnemy.play();
					life--;

					Game.Bullets.remove(i);
					return;

				}
			}
		}
	}

	public void destroySelf() {

		Game.enemies.remove(this);
		Game.entities.remove(this);

	}

	public void render(Graphics g) {

		if (this.isDamaged) {

			if (right) {

				this.right = false;
				this.moved = false;

				g.drawImage(RightEnemyDamege[index], this.getX() - Camera.x, this.getY() - Camera.y, null);

			} else if (left) {

				this.left = false;
				this.moved = false;

				g.drawImage(LeftEnemyDamege[index], this.getX() - Camera.x, this.getY() - Camera.y, null);

			} else if (up) {

				this.up = false;
				this.moved = false;

				g.drawImage(TopEnemyDamege[index], this.getX() - Camera.x, this.getY() - Camera.y, null);

			} else {

				setDown(false);
				this.moved = false;

				g.drawImage(DownEnemyDamege[index], this.getX() - Camera.x, this.getY() - Camera.y, null);

			}
		} else {

			if (right) {

				this.right = false;
				this.moved = false;

				g.drawImage(RightEnemy[index], this.getX() - Camera.x, this.getY() - Camera.y, null);

			} else if (left) {

				this.left = false;
				this.moved = false;

				g.drawImage(LeftEnemy[index], this.getX() - Camera.x, this.getY() - Camera.y, null);

			} else if (up) {

				this.up = false;
				this.moved = false;

				g.drawImage(TopEnemy[index], this.getX() - Camera.x, this.getY() - Camera.y, null);

			} else {

				setDown(false);
				this.moved = false;

				g.drawImage(DownEnemy[index], this.getX() - Camera.x, this.getY() - Camera.y, null);

			}
		}
	}

	public boolean isDown() {
		return down;
	}

	public void setDown(boolean down) {
		this.down = down;
	}

	public boolean isDamege() {
		return isDamege;
	}

	public void setDamege(boolean isDamege) {
		this.isDamege = isDamege;
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3750)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2203)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2203)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3302)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:175)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:160)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-08-06 14:11:02.901
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3750)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2203)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2203)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3302)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:175)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:160)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-08-06 14:11:02.920
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3750)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2203)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2203)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3302)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:175)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:160)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.debug 2 0 2020-08-06 14:42:43.032
!MESSAGE Unable to find location of java.lang.Thread.setName() in debuggee JVM, for type java.lang.Thread
!SESSION 2020-08-10 10:46:55.033 -----------------------------------------------
eclipse.buildId=4.16.0.I20200604-0540
java.version=1.8.0_261
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=pt_BR
Framework arguments:  -product org.eclipse.epp.package.jee.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.jee.product

!ENTRY org.eclipse.jface 2 0 2020-08-10 10:50:56.017
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2020-08-10 10:50:56.018
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@77622c82,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@44df834c,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2020-08-10 10:51:02.696
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\mbmui'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.jdt.core 4 4 2020-08-10 16:18:37.174
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.HagekopStudios.gfx;

public class Screen {
	public int xOffset;
	public int yOffset;
	
	public static final int BIT_MIRROR_X = 0x01;
	public static final int BIT_MIRROR_Y = 0x02;
	
	public final int w;
	public final int h;
	
	public int[] pixels;
	private SpriteSheet sheet;
	
	public Screen(int w, int h, SpriteSheet sheet) {
		this.sheet = sheet;
		this.w = w;
		this.h = h;
		pixels = new int[w*h];
	}
	public void clear(int color) {
		for(int i = 0; i<pixels.length; i++) {
			pixels[i] = color;
		}
	}
	public void render(int xp, int yp, int tile, int colors, int bits) {
		xp -= xOffset;
		yp -= yOffset;
		boolean mirrorX = (bits & BIT_MIRROR_X) > 0;
		boolean mirrorY = (bits & BIT_MIRROR_Y) > 0;
		
		int xTile = tile%32;
		int yTile = tile/32;
		int toffs = xTile *8 + yTile * sheet.width;

		for(int y = 0; y < 8; y++) {
			int ys = y;
			if(mirrorY) ys = 7 - y;
			if(y+yp<0||y+yp>=h)continue;
			for(int x = 0; x< 8; x++) {
				if(x+xp<0 || x+xp>=w)continue;
				
				int xs = x;
				if(mirrorX) xs = 7-x;
				int col = (colors>>(sheet.pixels[xs+ys*sheet.width+toffs]*8))&255;
				if(col<255)pixels[(x+xp)+(y+yp)*w] =col;
			}
			
		}
		
	}
	public void setOffset(int xOffset, int yOffset) {
		this.xOffset = xOffset;
		this.yOffset = yOffset;
	}
	private int[] dither = new int[] {0,8,2,10,12,4,14,6,3,11,1,9,15,7,13,5,};
	public void overlay(Screen screen2, int xa, int ya) {
		int[] oPixels = screen2.pixels;
		int i = 0;
		for(int y = 0; y<h;y++) {
			for(int x=0; x<w;x++) {
				if(oPixels[i]/10<=dither[((x+xa)&3)+((y+ya)&3)*4]) pixels[i] = 0;
				i++;
			}
		}
	}
	public void renderLight(int x, int y, int r) {
		x-=xOffset;
		y-_
	}
}


----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3750)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3302)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:450)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2020-08-10 16:18:37.259
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3750)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3302)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:450)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2020-08-10 16:18:37.281
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3750)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3302)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:450)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2020-08-10 16:18:37.303
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.HagekopStudios.gfx;

public class Screen {
	public int xOffset;
	public int yOffset;
	
	public static final int BIT_MIRROR_X = 0x01;
	public static final int BIT_MIRROR_Y = 0x02;
	
	public final int w;
	public final int h;
	
	public int[] pixels;
	private SpriteSheet sheet;
	
	public Screen(int w, int h, SpriteSheet sheet) {
		this.sheet = sheet;
		this.w = w;
		this.h = h;
		pixels = new int[w*h];
	}
	public void clear(int color) {
		for(int i = 0; i<pixels.length; i++) {
			pixels[i] = color;
		}
	}
	public void render(int xp, int yp, int tile, int colors, int bits) {
		xp -= xOffset;
		yp -= yOffset;
		boolean mirrorX = (bits & BIT_MIRROR_X) > 0;
		boolean mirrorY = (bits & BIT_MIRROR_Y) > 0;
		
		int xTile = tile%32;
		int yTile = tile/32;
		int toffs = xTile *8 + yTile * sheet.width;

		for(int y = 0; y < 8; y++) {
			int ys = y;
			if(mirrorY) ys = 7 - y;
			if(y+yp<0||y+yp>=h)continue;
			for(int x = 0; x< 8; x++) {
				if(x+xp<0 || x+xp>=w)continue;
				
				int xs = x;
				if(mirrorX) xs = 7-x;
				int col = (colors>>(sheet.pixels[xs+ys*sheet.width+toffs]*8))&255;
				if(col<255)pixels[(x+xp)+(y+yp)*w] =col;
			}
			
		}
		
	}
	public void setOffset(int xOffset, int yOffset) {
		this.xOffset = xOffset;
		this.yOffset = yOffset;
	}
	private int[] dither = new int[] {0,8,2,10,12,4,14,6,3,11,1,9,15,7,13,5,};
	public void overlay(Screen screen2, int xa, int ya) {
		int[] oPixels = screen2.pixels;
		int i = 0;
		for(int y = 0; y<h;y++) {
			for(int x=0; x<w;x++) {
				if(oPixels[i]/10<=dither[((x+xa)&3)+((y+ya)&3)*4]) pixels[i] = 0;
				i++;
			}
		}
	}
	public void renderLight(int x, int y, int r) {
		x-=xOffset;
		y-_
	}
}


----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3750)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3302)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:186)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:175)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:160)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-08-10 16:18:37.323
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3750)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3302)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:186)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:175)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:160)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-08-10 16:18:37.343
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3750)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3302)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:186)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:175)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:160)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2020-08-10 16:18:39.805
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.HagekopStudios.gfx;

public class Screen {
	public int xOffset;
	public int yOffset;
	
	public static final int BIT_MIRROR_X = 0x01;
	public static final int BIT_MIRROR_Y = 0x02;
	
	public final int w;
	public final int h;
	
	public int[] pixels;
	private SpriteSheet sheet;
	
	public Screen(int w, int h, SpriteSheet sheet) {
		this.sheet = sheet;
		this.w = w;
		this.h = h;
		pixels = new int[w*h];
	}
	public void clear(int color) {
		for(int i = 0; i<pixels.length; i++) {
			pixels[i] = color;
		}
	}
	public void render(int xp, int yp, int tile, int colors, int bits) {
		xp -= xOffset;
		yp -= yOffset;
		boolean mirrorX = (bits & BIT_MIRROR_X) > 0;
		boolean mirrorY = (bits & BIT_MIRROR_Y) > 0;
		
		int xTile = tile%32;
		int yTile = tile/32;
		int toffs = xTile *8 + yTile * sheet.width;

		for(int y = 0; y < 8; y++) {
			int ys = y;
			if(mirrorY) ys = 7 - y;
			if(y+yp<0||y+yp>=h)continue;
			for(int x = 0; x< 8; x++) {
				if(x+xp<0 || x+xp>=w)continue;
				
				int xs = x;
				if(mirrorX) xs = 7-x;
				int col = (colors>>(sheet.pixels[xs+ys*sheet.width+toffs]*8))&255;
				if(col<255)pixels[(x+xp)+(y+yp)*w] =col;
			}
			
		}
		
	}
	public void setOffset(int xOffset, int yOffset) {
		this.xOffset = xOffset;
		this.yOffset = yOffset;
	}
	private int[] dither = new int[] {0,8,2,10,12,4,14,6,3,11,1,9,15,7,13,5,};
	public void overlay(Screen screen2, int xa, int ya) {
		int[] oPixels = screen2.pixels;
		int i = 0;
		for(int y = 0; y<h;y++) {
			for(int x=0; x<w;x++) {
				if(oPixels[i]/10<=dither[((x+xa)&3)+((y+ya)&3)*4]) pixels[i] = 0;
				i++;
			}
		}
	}
	public void renderLight(int x, int y, int r) {
		x-=xOffset;
		y-_yOff
	}
}


----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3750)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3302)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:450)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2020-08-10 16:18:39.834
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3750)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3302)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:450)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2020-08-10 16:18:39.866
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3750)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3302)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:450)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2020-08-10 16:18:39.889
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.HagekopStudios.gfx;

public class Screen {
	public int xOffset;
	public int yOffset;
	
	public static final int BIT_MIRROR_X = 0x01;
	public static final int BIT_MIRROR_Y = 0x02;
	
	public final int w;
	public final int h;
	
	public int[] pixels;
	private SpriteSheet sheet;
	
	public Screen(int w, int h, SpriteSheet sheet) {
		this.sheet = sheet;
		this.w = w;
		this.h = h;
		pixels = new int[w*h];
	}
	public void clear(int color) {
		for(int i = 0; i<pixels.length; i++) {
			pixels[i] = color;
		}
	}
	public void render(int xp, int yp, int tile, int colors, int bits) {
		xp -= xOffset;
		yp -= yOffset;
		boolean mirrorX = (bits & BIT_MIRROR_X) > 0;
		boolean mirrorY = (bits & BIT_MIRROR_Y) > 0;
		
		int xTile = tile%32;
		int yTile = tile/32;
		int toffs = xTile *8 + yTile * sheet.width;

		for(int y = 0; y < 8; y++) {
			int ys = y;
			if(mirrorY) ys = 7 - y;
			if(y+yp<0||y+yp>=h)continue;
			for(int x = 0; x< 8; x++) {
				if(x+xp<0 || x+xp>=w)continue;
				
				int xs = x;
				if(mirrorX) xs = 7-x;
				int col = (colors>>(sheet.pixels[xs+ys*sheet.width+toffs]*8))&255;
				if(col<255)pixels[(x+xp)+(y+yp)*w] =col;
			}
			
		}
		
	}
	public void setOffset(int xOffset, int yOffset) {
		this.xOffset = xOffset;
		this.yOffset = yOffset;
	}
	private int[] dither = new int[] {0,8,2,10,12,4,14,6,3,11,1,9,15,7,13,5,};
	public void overlay(Screen screen2, int xa, int ya) {
		int[] oPixels = screen2.pixels;
		int i = 0;
		for(int y = 0; y<h;y++) {
			for(int x=0; x<w;x++) {
				if(oPixels[i]/10<=dither[((x+xa)&3)+((y+ya)&3)*4]) pixels[i] = 0;
				i++;
			}
		}
	}
	public void renderLight(int x, int y, int r) {
		x-=xOffset;
		y-_yOffs
	}
}


----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3750)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3302)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:186)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:175)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:160)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-08-10 16:18:39.911
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3750)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3302)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:186)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:175)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:160)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-08-10 16:18:39.933
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3750)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3302)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:186)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:175)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:160)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2020-08-10 16:30:03.190
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.HagekopStudios.main;

import java.awt.Canvas;
import java.awt.image.BufferedImage;
import java.awt.image.DataBufferInt;

import com.HagekopStudios.gfx.Screen;

public class Game extends Canvas implements Runnable, GameConfig {
	
	/**
	 * 
	 */
	public static String GameState = "STARTING";
	public static final String Name = "null";
	public static int CUR_LEVEL = 1;
	public static boolean running = false;
	private static final long serialVersionUID = 3L;
	private BufferedImage image = new BufferedImage(GameConfig.WIDTH,GameConfig.HEIGTH, BufferedImage.TYPE_INT_RGB);
	private int[] colors = new int[256];
	private int[] pixels = ((DataBufferInt) image.getRaster().getDataBuffer()).getData();
	private Screen lightScreen;
	public void start() {
		running = true;
		new Thread(this).start();
	}
	public void stop()
	@Override
	public void run() {
		// TODO Auto-generated method stub
		
	}

	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3105)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:738)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3302)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:450)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2020-08-10 16:30:03.216
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3105)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:738)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3302)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:450)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2020-08-10 16:30:03.239
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3105)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:738)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3302)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:450)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)
!SESSION 2020-08-10 16:43:05.902 -----------------------------------------------
eclipse.buildId=4.16.0.I20200604-0540
java.version=1.8.0_261
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=pt_BR
Framework arguments:  -product org.eclipse.epp.package.jee.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.jee.product

!ENTRY org.eclipse.core.resources 2 10035 2020-08-10 16:48:44.116
!MESSAGE The workspace exited with unsaved changes in the previous session; refreshing workspace to recover changes.

!ENTRY org.eclipse.jface 2 0 2020-08-10 16:48:48.722
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2020-08-10 16:48:48.722
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@4e826fd4,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@5f14590c,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2020-08-10 16:48:55.171
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\mbmui'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
